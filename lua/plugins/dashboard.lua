-- if true then
--   return {}
-- end

local headers = {
  [[
░▒▓███████▓▒░░▒▓████████▓▒░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓██████████████▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▓█▓▒░ ░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░     ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▓█▓▒░ ░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░
░▒▓█▓▒░░▒▓█▓▒░▒▓████████▓▒░▒▓██████▓▒░   ░▒▓██▓▒░  ░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░░▒▓█▓▒░
  ]],
  [[
 ███▄    █ ▓█████  ▒█████   ██▒   █▓ ██▓ ███▄ ▄███▓
 ██ ▀█   █ ▓█   ▀ ▒██▒  ██▒▓██░   █▒▓██▒▓██▒▀█▀ ██▒
▓██  ▀█ ██▒▒███   ▒██░  ██▒ ▓██  █▒░▒██▒▓██    ▓██░
▓██▒  ▐▌██▒▒▓█  ▄ ▒██   ██░  ▒██ █░░░██░▒██    ▒██ 
▒██░   ▓██░░▒████▒░ ████▓▒░   ▒▀█░  ░██░▒██▒   ░██▒
░ ▒░   ▒ ▒ ░░ ▒░ ░░ ▒░▒░▒░    ░ ▐░  ░▓  ░ ▒░   ░  ░
░ ░░   ░ ▒░ ░ ░  ░  ░ ▒ ▒░    ░ ░░   ▒ ░░  ░      ░
   ░   ░ ░    ░   ░ ░ ░ ▒       ░░   ▒ ░░      ░   
         ░    ░  ░    ░ ░        ░   ░         ░   
                                ░                  
  ]],
  [[
  #               #   #       #               #       ######## 
  #        ########## #       #              ########        # 
##########       ##          #    ######    #    #          #  
  #     #      ## #         #              #    #         ##   
  #          ##   #       ##                   #        ## #   
  #        ##    ##     ##      ##########    #        ##   #  
   ######         #   ##                     #        #      # 
  ]],
  [[
  |  |\    /| /~\ |\   ||\  /| 
\ |  | \  / |/   \| \  || \/ | 
 \|  |  \/  |\   /|  \ || /\ | 
  |\ |      | \ / |   |||/  \| 
  | \|      | / \ |   |||    | 
  |  |      |/   \|   |||    | 
  ]],
  [[
      ::::    ::: :::::::::: ::::::::  :::     ::: :::::::::::   :::   ::: 
     :+:+:   :+: :+:       :+:    :+: :+:     :+:     :+:      :+:+: :+:+: 
    :+:+:+  +:+ +:+       +:+    +:+ +:+     +:+     +:+     +:+ +:+:+ +:+ 
   +#+ +:+ +#+ +#++:++#  +#+    +:+ +#+     +:+     +#+     +#+  +:+  +#+  
  +#+  +#+#+# +#+       +#+    +#+  +#+   +#+      +#+     +#+       +#+   
 #+#   #+#+# #+#       #+#    #+#   #+#+#+#       #+#     #+#       #+#    
###    #### ########## ########      ###     ########### ###       ###     
  ]],
  [[
_____   ___________________ ___    ________________  ___
___  | / /___  ____/__  __ \__ |  / /____  _/___   |/  /
__   |/ / __  __/   _  / / /__ | / /  __  /  __  /|_/ / 
_  /|  /  _  /___   / /_/ / __ |/ /  __/ /   _  /  / /  
/_/ |_/   /_____/   \____/  _____/   /___/   /_/  /_/   
  ]],
  [[
888b    | 888~~    ,88~-_   Y88b      / 888      e    e      
|Y88b   | 888___  d888   \   Y88b    /  888     d8b  d8b     
| Y88b  | 888    88888    |   Y88b  /   888    d888bdY88b    
|  Y88b | 888    88888    |    Y888/    888   / Y88Y Y888b   
|   Y88b| 888     Y888   /      Y8/     888  /   YY   Y888b  
|    Y888 888___   `88_-~        Y      888 /          Y888b 
  ]],
}

local get_random_header = function()
  local headers_length = #headers

  -- Seed in order to get a truly random number every time the function is called
  math.randomseed(os.time())

  local random_index = math.random(1, headers_length)
  local random_header = headers[random_index]

  random_header = string.rep("\n", 8) .. random_header .. "\n\n"

  return random_header
end

-- return {
--   {
--     "nvimdev/dashboard-nvim",
--     opts = function(_, opts)
--       opts.config.header = vim.split(get_random_header(), "\n")
--     end,
--   },
-- }

return {
  {
    "snacks.nvim",
    opts = {
      dashboard = {
        preset = {
          header = [[
  #               #   #       #               #       ######## 
  #        ########## #       #              ########        # 
##########       ##          #    ######    #    #          #  
  #     #      ## #         #              #    #         ##   
  #          ##   #       ##                   #        ## #   
  #        ##    ##     ##      ##########    #        ##   #  
   ######         #   ##                     #        #      # 
]],
        },
      },
    },
  },
}
